/** CAN message encoder/decoder: automatically generated - do not edit
  * Generated by dbcc: See https://github.com/howerj/dbcc */
#ifndef CAN2_H
#define CAN2_H

/* If the contents of this file have caused breaking changes for you, you could try using
   an older version of the generator. You can specify this on the command line with
   the -n option. */
#define DBCC_GENERATOR_VERSION (3)

#include <stdint.h>
#include <stdio.h>

#ifdef __cplusplus
extern "C" { 
#endif

#ifndef PREPACK
#define PREPACK
#endif

#ifndef POSTPACK
#define POSTPACK
#endif

#ifndef DBCC_TIME_STAMP
#define DBCC_TIME_STAMP
typedef uint32_t dbcc_time_stamp_t; /* Time stamp for message; you decide on units */
#endif

#ifndef DBCC_STATUS_ENUM
#define DBCC_STATUS_ENUM
typedef enum {
	DBCC_SIG_STAT_UNINITIALIZED_E = 0, /* Message never sent/received */
	DBCC_SIG_STAT_OK_E            = 1, /* Message ok */
	DBCC_SIG_STAT_ERROR_E         = 2, /* Encode/Decode/Timestamp/Any error */
} dbcc_signal_status_e;
#endif

#define CAN_ID_PADDLE (82) /* 0x52 */
#define CAN_ID_DRIVER (83) /* 0x53 */
#define CAN_ID_BMSLV1 (84) /* 0x54 */
#define CAN_ID_BMSLV2 (85) /* 0x55 */
#define CAN_ID_BMSHV1 (87) /* 0x57 */
#define CAN_ID_BMSHV2 (88) /* 0x58 */
#define CAN_ID_IMU1 (96) /* 0x60 */
#define CAN_ID_IMU2 (97) /* 0x61 */
#define CAN_ID_IMU3 (98) /* 0x62 */
#define CAN_ID_IMUCALIB (99) /* 0x63 */
#define CAN_ID_MAP (100) /* 0x64 */
#define CAN_ID_CARSTATUS (101) /* 0x65 */
#define CAN_ID_CARSETTINGS (102) /* 0x66 */
#define CAN_ID_LAPSTART (112) /* 0x70 */
#define CAN_ID_TEMP1 (256) /* 0x100 */
#define CAN_ID_TEMP2 (257) /* 0x101 */
#define CAN_ID_SUSPREAR (258) /* 0x102 */
#define CAN_ID_RESERVED2 (259) /* 0x103 */
#define CAN_ID_SUSPFRONT (260) /* 0x104 */
#define CAN_ID_TEMPFRONTR (261) /* 0x105 */
#define CAN_ID_INVVOLT (288) /* 0x120 */
#define CAN_ID_PCU (304) /* 0x130 */
#define CAN_ID_CALIB (305) /* 0x131 */
#define CAN_ID_CALIBACK (306) /* 0x132 */
#define CAN_ID_LEM (962) /* 0x3c2 */

typedef PREPACK struct {
	/* regen: % of regen paddle travel */
	/* scaling 1.0, offset 0.0, units %  */
	uint8_t regen;
} POSTPACK can_0x052_Paddle_t;

typedef PREPACK struct {
	/* steering: Steering angle in milli radians */
	/* scaling 1.0, offset 0.0, units deg  */
	int16_t steering;
	/* throttle: % of throttle */
	/* scaling 1.0, offset 0.0, units %  */
	uint8_t throttle;
	/* brake: % of brake pedal */
	/* scaling 1.0, offset 0.0, units %  */
	uint8_t brake;
	uint8_t no_implausibility; /* scaling 1.0, offset 0.0, units none  */
	uint8_t bre_implausibility; /* scaling 1.0, offset 0.0, units none  */
	uint8_t pad_implausibility; /* scaling 1.0, offset 0.0, units none  */
	uint8_t pot_implausibility; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x053_Driver_t;

typedef PREPACK struct {
	/* volt1: Cell 1 voltage in mv */
	/* scaling 0.1, offset 0.0, units mV  */
	uint16_t volt1;
	/* volt2: Cell 2 voltage in mv */
	/* scaling 0.1, offset 0.0, units mV  */
	uint16_t volt2;
	/* volt3: Cell 3 voltage in mv */
	/* scaling 0.1, offset 0.0, units mV  */
	uint16_t volt3;
	/* volt4: Cell 4 voltage in mv */
	/* scaling 0.1, offset 0.0, units mV  */
	uint16_t volt4;
} POSTPACK can_0x054_BmsLv1_t;

typedef PREPACK struct {
	/* volt5: Cell 5 voltage in mv */
	/* scaling 0.1, offset 0.0, units mV  */
	uint16_t volt5;
	/* volt6: Cell 6 voltage in mv */
	/* scaling 0.1, offset 0.0, units mV  */
	uint16_t volt6;
	/* temp1: Temp linearized */
	/* scaling -0.0, offset 76.0, units C  */
	uint16_t temp1;
	/* temp2: Temp linearized */
	/* scaling -0.0, offset 76.0, units C  */
	uint16_t temp2;
} POSTPACK can_0x055_BmsLv2_t;

typedef PREPACK struct {
	/* max_volt: Maximum cell voltage in mv */
	/* scaling 0.1, offset 0.0, units mV  */
	uint16_t max_volt;
	/* min_volt: Minimum cell voltage in mv */
	/* scaling 0.1, offset 0.0, units mV  */
	uint16_t min_volt;
	/* avg_volt: Average cell voltage in mv */
	/* scaling 0.1, offset 0.0, units mV  */
	uint16_t avg_volt;
	/* soc: HV battery SOC in % */
	/* scaling 1.0, offset 0.0, units %  */
	uint8_t soc;
} POSTPACK can_0x057_BmsHv1_t;

typedef PREPACK struct {
	/* max_temp: Maximum cell temperature in celsius */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t max_temp;
	/* min_temp: Minimum cell temperature in celsius */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t min_temp;
	/* avg_temp: Average cell temperature in celsius */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t avg_temp;
	/* fan_speed: % of HV battery fan speed */
	/* scaling 1.0, offset 0.0, units %  */
	uint8_t fan_speed;
} POSTPACK can_0x058_BmsHv2_t;

typedef PREPACK struct {
	/* acc_x: Acceleration on x axis in m/s^2 */
	/* scaling 1.0, offset 0.0, units m/s^2 , floating */
	float acc_x;
	/* acc_y: Acceleration on y axis in m/s^2 */
	/* scaling 1.0, offset 0.0, units m/s^2 , floating */
	float acc_y;
} POSTPACK can_0x060_Imu1_t;

typedef PREPACK struct {
	/* acc_z: Acceleration on z axis in m/s^2 */
	/* scaling 1.0, offset 0.0, units m/s^2 , floating */
	float acc_z;
	/* omega_x: Angular speed on x axis in rad/s */
	/* scaling 1.0, offset 0.0, units rad/s , floating */
	float omega_x;
} POSTPACK can_0x061_Imu2_t;

typedef PREPACK struct {
	/* omega_y: Angular speed on x axis in rad/s */
	/* scaling 1.0, offset 0.0, units rad/s , floating */
	float omega_y;
	/* omega_z: Angular speed on x axis in rad/s */
	/* scaling 1.0, offset 0.0, units rad/s , floating */
	float omega_z;
} POSTPACK can_0x062_Imu3_t;

/* RESERVER FOR IMU mask - DO NOT USE */
typedef PREPACK struct {
	uint8_t start_imu_calibration; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x063_IMUCalib_t;

typedef PREPACK struct {
	/* power: Map selected number */
	/* scaling 1.0, offset 0.0, units map  */
	uint8_t power;
	/* regen: Map selected for regen braking */
	/* scaling 1.0, offset 0.0, units map  */
	uint8_t regen;
	/* torque_rep: Map selected for torque repeartition */
	/* scaling 1.0, offset 0.0, units map  */
	uint8_t torque_rep;
} POSTPACK can_0x064_Map_t;

typedef PREPACK struct {
	uint8_t speed; /* scaling 1.0, offset 0.0, units km/h  */
	uint8_t HV; /* scaling 1.0, offset 0.0, units on  */
	uint8_t R2D; /* scaling 1.0, offset 0.0, units on  */
	uint8_t RF; /* scaling 1.0, offset 0.0, units enabled  */
	uint8_t AIR1; /* scaling 1.0, offset 0.0, units closed  */
	uint8_t AIR2; /* scaling 1.0, offset 0.0, units closed  */
	uint8_t precharge; /* scaling 1.0, offset 0.0, units done  */
} POSTPACK can_0x065_CarStatus_t;

typedef PREPACK struct {
	/* max_regen_current: Maximum Regen Current */
	/* scaling 1.0, offset 0.0, units A  */
	uint8_t max_regen_current;
	/* pwr_limit: Maximum power limit */
	/* scaling 1.0, offset 0.0, units kW  */
	uint8_t pwr_limit;
	/* speed_lim: Maximum Speed Limit */
	/* scaling 1.0, offset 0.0, units krpm  */
	uint8_t speed_lim;
	/* max_pos_trq: Maximum Positive Torque */
	/* scaling 1.0, offset 0.0, units Nm  */
	uint8_t max_pos_trq;
	/* max_neg_trq: Maximum Negative Torque */
	/* scaling 1.0, offset 0.0, units Nm  */
	int8_t max_neg_trq;
	/* front_motor_repartition: Torque Repartition Front */
	/* scaling 1.0, offset 0.0, units %  */
	uint8_t front_motor_repartition;
	/* rear_motor_repartition: Torque Repartition Rear */
	/* scaling 1.0, offset 0.0, units %  */
	uint8_t rear_motor_repartition;
	/* torque_vectoring: Torque Vectoring enabled */
	/* scaling 1.0, offset 0.0, units on  */
	uint8_t torque_vectoring;
} POSTPACK can_0x066_CarSettings_t;

typedef PREPACK struct {
	uint8_t start; /* scaling 1.0, offset 0.0, units start  */
} POSTPACK can_0x070_LapStart_t;

typedef PREPACK struct {
	/* temp_motor_post_L:  */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t temp_motor_post_L;
	/* temp_motor_pre_L:  */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t temp_motor_pre_L;
	/* temp_motor_pre_R:  */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t temp_motor_pre_R;
	/* temp_coldplate_pre_R:  */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t temp_coldplate_pre_R;
} POSTPACK can_0x100_Temp1_t;

typedef PREPACK struct {
	/* temp_cold_pre_L:  */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t temp_cold_pre_L;
	/* temp_cold_post_R: 
 */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t temp_cold_post_R;
	/* temp_cold_post_L:  */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t temp_cold_post_L;
	/* temp_mot_post_R:  */
	/* scaling 1.0, offset 0.0, units C  */
	uint16_t temp_mot_post_R;
} POSTPACK can_0x101_Temp2_t;

typedef PREPACK struct {
	/* susp_rr: RR suspension travel in mm */
	/* scaling 0.1, offset 0.0, units mm  */
	uint16_t susp_rr;
	/* susp_rl: RL suspension travel in mm */
	/* scaling 0.1, offset 0.0, units mm  */
	uint16_t susp_rl;
} POSTPACK can_0x102_SuspRear_t;

/* RESERVER FOR SMU mask - DO NOT USE */
typedef PREPACK struct {
} POSTPACK can_0x103_RESERVED2_t;

typedef PREPACK struct {
	/* susp_fr: FR suspension travel in mm */
	/* scaling 0.1, offset 0.0, units mm  */
	uint16_t susp_fr;
	/* susp_fl: FL suspension travel in mm */
	/* scaling 0.1, offset 0.0, units mm  */
	uint16_t susp_fl;
} POSTPACK can_0x104_SuspFront_t;

typedef PREPACK struct {
	uint16_t temp_mot_pot_FR; /* scaling 1.0, offset 0.0, units C  */
	uint16_t temp_mot_pre_FR; /* scaling 1.0, offset 0.0, units C  */
} POSTPACK can_0x105_TempFrontR_t;

typedef PREPACK struct {
	/* car_voltage: Voltage seen from car side (inverter) in volts */
	/* scaling 1.0, offset 0.0, units V  */
	uint16_t car_voltage;
} POSTPACK can_0x120_InvVolt_t;

typedef PREPACK struct {
	/* fan_speed: Water radiator fan speed in % */
	/* scaling 1.0, offset 0.0, units %  */
	uint8_t fan_speed;
	/* pump_speed: Water pump speed */
	/* scaling 1.0, offset 0.0, units %  */
	uint8_t pump_speed;
	/* fan_enable: Water radiator fan enable */
	/* scaling 1.0, offset 0.0, units on  */
	uint8_t fan_enable;
	/* pump_enable: Water pump enable */
	/* scaling 1.0, offset 0.0, units on  */
	uint8_t pump_enable;
} POSTPACK can_0x130_Pcu_t;

typedef PREPACK struct {
	/* position: Set calibration of rest value (0) or 100% (1) */
	/* scaling 1.0, offset 0.0, units high  */
	uint8_t position;
} POSTPACK can_0x131_Calib_t;

typedef PREPACK struct {
	uint8_t position; /* scaling 1.0, offset 0.0, units high  */
} POSTPACK can_0x132_CalibAck_t;

typedef PREPACK struct {
	/* current: Current seen from LEM on car side (PDB) */
	/* scaling 1.0, offset -2147483648.0, units mA  */
	uint32_t current;
} POSTPACK can_0x3c2_Lem_t;

typedef PREPACK struct {
	dbcc_time_stamp_t can_0x052_Paddle_time_stamp_rx;
	dbcc_time_stamp_t can_0x053_Driver_time_stamp_rx;
	dbcc_time_stamp_t can_0x054_BmsLv1_time_stamp_rx;
	dbcc_time_stamp_t can_0x055_BmsLv2_time_stamp_rx;
	dbcc_time_stamp_t can_0x057_BmsHv1_time_stamp_rx;
	dbcc_time_stamp_t can_0x058_BmsHv2_time_stamp_rx;
	dbcc_time_stamp_t can_0x060_Imu1_time_stamp_rx;
	dbcc_time_stamp_t can_0x061_Imu2_time_stamp_rx;
	dbcc_time_stamp_t can_0x062_Imu3_time_stamp_rx;
	dbcc_time_stamp_t can_0x063_IMUCalib_time_stamp_rx;
	dbcc_time_stamp_t can_0x064_Map_time_stamp_rx;
	dbcc_time_stamp_t can_0x065_CarStatus_time_stamp_rx;
	dbcc_time_stamp_t can_0x066_CarSettings_time_stamp_rx;
	dbcc_time_stamp_t can_0x070_LapStart_time_stamp_rx;
	dbcc_time_stamp_t can_0x100_Temp1_time_stamp_rx;
	dbcc_time_stamp_t can_0x101_Temp2_time_stamp_rx;
	dbcc_time_stamp_t can_0x102_SuspRear_time_stamp_rx;
	dbcc_time_stamp_t can_0x103_RESERVED2_time_stamp_rx;
	dbcc_time_stamp_t can_0x104_SuspFront_time_stamp_rx;
	dbcc_time_stamp_t can_0x105_TempFrontR_time_stamp_rx;
	dbcc_time_stamp_t can_0x120_InvVolt_time_stamp_rx;
	dbcc_time_stamp_t can_0x130_Pcu_time_stamp_rx;
	dbcc_time_stamp_t can_0x131_Calib_time_stamp_rx;
	dbcc_time_stamp_t can_0x132_CalibAck_time_stamp_rx;
	dbcc_time_stamp_t can_0x3c2_Lem_time_stamp_rx;
	unsigned can_0x052_Paddle_status : 2;
	unsigned can_0x052_Paddle_tx : 1;
	unsigned can_0x052_Paddle_rx : 1;
	unsigned can_0x053_Driver_status : 2;
	unsigned can_0x053_Driver_tx : 1;
	unsigned can_0x053_Driver_rx : 1;
	unsigned can_0x054_BmsLv1_status : 2;
	unsigned can_0x054_BmsLv1_tx : 1;
	unsigned can_0x054_BmsLv1_rx : 1;
	unsigned can_0x055_BmsLv2_status : 2;
	unsigned can_0x055_BmsLv2_tx : 1;
	unsigned can_0x055_BmsLv2_rx : 1;
	unsigned can_0x057_BmsHv1_status : 2;
	unsigned can_0x057_BmsHv1_tx : 1;
	unsigned can_0x057_BmsHv1_rx : 1;
	unsigned can_0x058_BmsHv2_status : 2;
	unsigned can_0x058_BmsHv2_tx : 1;
	unsigned can_0x058_BmsHv2_rx : 1;
	unsigned can_0x060_Imu1_status : 2;
	unsigned can_0x060_Imu1_tx : 1;
	unsigned can_0x060_Imu1_rx : 1;
	unsigned can_0x061_Imu2_status : 2;
	unsigned can_0x061_Imu2_tx : 1;
	unsigned can_0x061_Imu2_rx : 1;
	unsigned can_0x062_Imu3_status : 2;
	unsigned can_0x062_Imu3_tx : 1;
	unsigned can_0x062_Imu3_rx : 1;
	unsigned can_0x063_IMUCalib_status : 2;
	unsigned can_0x063_IMUCalib_tx : 1;
	unsigned can_0x063_IMUCalib_rx : 1;
	unsigned can_0x064_Map_status : 2;
	unsigned can_0x064_Map_tx : 1;
	unsigned can_0x064_Map_rx : 1;
	unsigned can_0x065_CarStatus_status : 2;
	unsigned can_0x065_CarStatus_tx : 1;
	unsigned can_0x065_CarStatus_rx : 1;
	unsigned can_0x066_CarSettings_status : 2;
	unsigned can_0x066_CarSettings_tx : 1;
	unsigned can_0x066_CarSettings_rx : 1;
	unsigned can_0x070_LapStart_status : 2;
	unsigned can_0x070_LapStart_tx : 1;
	unsigned can_0x070_LapStart_rx : 1;
	unsigned can_0x100_Temp1_status : 2;
	unsigned can_0x100_Temp1_tx : 1;
	unsigned can_0x100_Temp1_rx : 1;
	unsigned can_0x101_Temp2_status : 2;
	unsigned can_0x101_Temp2_tx : 1;
	unsigned can_0x101_Temp2_rx : 1;
	unsigned can_0x102_SuspRear_status : 2;
	unsigned can_0x102_SuspRear_tx : 1;
	unsigned can_0x102_SuspRear_rx : 1;
	unsigned can_0x103_RESERVED2_status : 2;
	unsigned can_0x103_RESERVED2_tx : 1;
	unsigned can_0x103_RESERVED2_rx : 1;
	unsigned can_0x104_SuspFront_status : 2;
	unsigned can_0x104_SuspFront_tx : 1;
	unsigned can_0x104_SuspFront_rx : 1;
	unsigned can_0x105_TempFrontR_status : 2;
	unsigned can_0x105_TempFrontR_tx : 1;
	unsigned can_0x105_TempFrontR_rx : 1;
	unsigned can_0x120_InvVolt_status : 2;
	unsigned can_0x120_InvVolt_tx : 1;
	unsigned can_0x120_InvVolt_rx : 1;
	unsigned can_0x130_Pcu_status : 2;
	unsigned can_0x130_Pcu_tx : 1;
	unsigned can_0x130_Pcu_rx : 1;
	unsigned can_0x131_Calib_status : 2;
	unsigned can_0x131_Calib_tx : 1;
	unsigned can_0x131_Calib_rx : 1;
	unsigned can_0x132_CalibAck_status : 2;
	unsigned can_0x132_CalibAck_tx : 1;
	unsigned can_0x132_CalibAck_rx : 1;
	unsigned can_0x3c2_Lem_status : 2;
	unsigned can_0x3c2_Lem_tx : 1;
	unsigned can_0x3c2_Lem_rx : 1;
	can_0x052_Paddle_t can_0x052_Paddle;
	can_0x053_Driver_t can_0x053_Driver;
	can_0x054_BmsLv1_t can_0x054_BmsLv1;
	can_0x055_BmsLv2_t can_0x055_BmsLv2;
	can_0x057_BmsHv1_t can_0x057_BmsHv1;
	can_0x058_BmsHv2_t can_0x058_BmsHv2;
	can_0x060_Imu1_t can_0x060_Imu1;
	can_0x061_Imu2_t can_0x061_Imu2;
	can_0x062_Imu3_t can_0x062_Imu3;
	can_0x063_IMUCalib_t can_0x063_IMUCalib;
	can_0x064_Map_t can_0x064_Map;
	can_0x065_CarStatus_t can_0x065_CarStatus;
	can_0x066_CarSettings_t can_0x066_CarSettings;
	can_0x070_LapStart_t can_0x070_LapStart;
	can_0x100_Temp1_t can_0x100_Temp1;
	can_0x101_Temp2_t can_0x101_Temp2;
	can_0x102_SuspRear_t can_0x102_SuspRear;
	can_0x103_RESERVED2_t can_0x103_RESERVED2;
	can_0x104_SuspFront_t can_0x104_SuspFront;
	can_0x105_TempFrontR_t can_0x105_TempFrontR;
	can_0x120_InvVolt_t can_0x120_InvVolt;
	can_0x130_Pcu_t can_0x130_Pcu;
	can_0x131_Calib_t can_0x131_Calib;
	can_0x132_CalibAck_t can_0x132_CalibAck;
	can_0x3c2_Lem_t can_0x3c2_Lem;
} POSTPACK can_obj_can2_h_t;

int unpack_message_can2_can2(can_obj_can2_h_t *o, const unsigned long id, uint64_t data, uint8_t dlc, dbcc_time_stamp_t time_stamp);
int pack_message_can2(can_obj_can2_h_t *o, const unsigned long id, uint64_t *data);
int print_message_can2(const can_obj_can2_h_t *o, const unsigned long id, FILE *output);

int decode_can_0x052_regen(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x052_regen(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x053_steering(const can_obj_can2_h_t *o, int16_t *out);
int encode_can_0x053_steering(can_obj_can2_h_t *o, int16_t in);
int decode_can_0x053_throttle(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x053_throttle(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x053_brake(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x053_brake(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x053_no_implausibility(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x053_no_implausibility(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x053_bre_implausibility(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x053_bre_implausibility(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x053_pad_implausibility(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x053_pad_implausibility(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x053_pot_implausibility(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x053_pot_implausibility(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x054_volt1(const can_obj_can2_h_t *o, double *out);
int encode_can_0x054_volt1(can_obj_can2_h_t *o, double in);
int decode_can_0x054_volt2(const can_obj_can2_h_t *o, double *out);
int encode_can_0x054_volt2(can_obj_can2_h_t *o, double in);
int decode_can_0x054_volt3(const can_obj_can2_h_t *o, double *out);
int encode_can_0x054_volt3(can_obj_can2_h_t *o, double in);
int decode_can_0x054_volt4(const can_obj_can2_h_t *o, double *out);
int encode_can_0x054_volt4(can_obj_can2_h_t *o, double in);


int decode_can_0x055_volt5(const can_obj_can2_h_t *o, double *out);
int encode_can_0x055_volt5(can_obj_can2_h_t *o, double in);
int decode_can_0x055_volt6(const can_obj_can2_h_t *o, double *out);
int encode_can_0x055_volt6(can_obj_can2_h_t *o, double in);
int decode_can_0x055_temp1(const can_obj_can2_h_t *o, double *out);
int encode_can_0x055_temp1(can_obj_can2_h_t *o, double in);
int decode_can_0x055_temp2(const can_obj_can2_h_t *o, double *out);
int encode_can_0x055_temp2(can_obj_can2_h_t *o, double in);


int decode_can_0x057_max_volt(const can_obj_can2_h_t *o, double *out);
int encode_can_0x057_max_volt(can_obj_can2_h_t *o, double in);
int decode_can_0x057_min_volt(const can_obj_can2_h_t *o, double *out);
int encode_can_0x057_min_volt(can_obj_can2_h_t *o, double in);
int decode_can_0x057_avg_volt(const can_obj_can2_h_t *o, double *out);
int encode_can_0x057_avg_volt(can_obj_can2_h_t *o, double in);
int decode_can_0x057_soc(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x057_soc(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x058_max_temp(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x058_max_temp(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x058_min_temp(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x058_min_temp(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x058_avg_temp(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x058_avg_temp(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x058_fan_speed(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x058_fan_speed(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x060_acc_x(const can_obj_can2_h_t *o, float *out);
int encode_can_0x060_acc_x(can_obj_can2_h_t *o, float in);
int decode_can_0x060_acc_y(const can_obj_can2_h_t *o, float *out);
int encode_can_0x060_acc_y(can_obj_can2_h_t *o, float in);


int decode_can_0x061_acc_z(const can_obj_can2_h_t *o, float *out);
int encode_can_0x061_acc_z(can_obj_can2_h_t *o, float in);
int decode_can_0x061_omega_x(const can_obj_can2_h_t *o, float *out);
int encode_can_0x061_omega_x(can_obj_can2_h_t *o, float in);


int decode_can_0x062_omega_y(const can_obj_can2_h_t *o, float *out);
int encode_can_0x062_omega_y(can_obj_can2_h_t *o, float in);
int decode_can_0x062_omega_z(const can_obj_can2_h_t *o, float *out);
int encode_can_0x062_omega_z(can_obj_can2_h_t *o, float in);


int decode_can_0x063_start_imu_calibration(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x063_start_imu_calibration(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x064_power(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x064_power(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x064_regen(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x064_regen(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x064_torque_rep(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x064_torque_rep(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x065_speed(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x065_speed(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x065_HV(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x065_HV(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x065_R2D(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x065_R2D(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x065_RF(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x065_RF(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x065_AIR1(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x065_AIR1(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x065_AIR2(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x065_AIR2(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x065_precharge(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x065_precharge(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x066_max_regen_current(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x066_max_regen_current(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x066_pwr_limit(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x066_pwr_limit(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x066_speed_lim(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x066_speed_lim(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x066_max_pos_trq(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x066_max_pos_trq(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x066_max_neg_trq(const can_obj_can2_h_t *o, int8_t *out);
int encode_can_0x066_max_neg_trq(can_obj_can2_h_t *o, int8_t in);
int decode_can_0x066_front_motor_repartition(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x066_front_motor_repartition(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x066_rear_motor_repartition(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x066_rear_motor_repartition(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x066_torque_vectoring(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x066_torque_vectoring(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x070_start(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x070_start(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x100_temp_motor_post_L(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x100_temp_motor_post_L(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x100_temp_motor_pre_L(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x100_temp_motor_pre_L(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x100_temp_motor_pre_R(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x100_temp_motor_pre_R(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x100_temp_coldplate_pre_R(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x100_temp_coldplate_pre_R(can_obj_can2_h_t *o, uint16_t in);


int decode_can_0x101_temp_cold_pre_L(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x101_temp_cold_pre_L(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x101_temp_cold_post_R(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x101_temp_cold_post_R(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x101_temp_cold_post_L(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x101_temp_cold_post_L(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x101_temp_mot_post_R(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x101_temp_mot_post_R(can_obj_can2_h_t *o, uint16_t in);


int decode_can_0x102_susp_rr(const can_obj_can2_h_t *o, double *out);
int encode_can_0x102_susp_rr(can_obj_can2_h_t *o, double in);
int decode_can_0x102_susp_rl(const can_obj_can2_h_t *o, double *out);
int encode_can_0x102_susp_rl(can_obj_can2_h_t *o, double in);




int decode_can_0x104_susp_fr(const can_obj_can2_h_t *o, double *out);
int encode_can_0x104_susp_fr(can_obj_can2_h_t *o, double in);
int decode_can_0x104_susp_fl(const can_obj_can2_h_t *o, double *out);
int encode_can_0x104_susp_fl(can_obj_can2_h_t *o, double in);


int decode_can_0x105_temp_mot_pot_FR(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x105_temp_mot_pot_FR(can_obj_can2_h_t *o, uint16_t in);
int decode_can_0x105_temp_mot_pre_FR(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x105_temp_mot_pre_FR(can_obj_can2_h_t *o, uint16_t in);


int decode_can_0x120_car_voltage(const can_obj_can2_h_t *o, uint16_t *out);
int encode_can_0x120_car_voltage(can_obj_can2_h_t *o, uint16_t in);


int decode_can_0x130_fan_speed(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x130_fan_speed(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x130_pump_speed(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x130_pump_speed(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x130_fan_enable(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x130_fan_enable(can_obj_can2_h_t *o, uint8_t in);
int decode_can_0x130_pump_enable(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x130_pump_enable(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x131_position(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x131_position(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x132_position(const can_obj_can2_h_t *o, uint8_t *out);
int encode_can_0x132_position(can_obj_can2_h_t *o, uint8_t in);


int decode_can_0x3c2_current(const can_obj_can2_h_t *o, double *out);
int encode_can_0x3c2_current(can_obj_can2_h_t *o, double in);


#ifdef __cplusplus
} 
#endif

#endif
