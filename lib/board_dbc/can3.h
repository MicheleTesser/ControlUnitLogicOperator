/** CAN message encoder/decoder: automatically generated - do not edit
  * Generated by dbcc: See https://github.com/howerj/dbcc */
#ifndef CAN3_H
#define CAN3_H

/* If the contents of this file have caused breaking changes for you, you could try using
   an older version of the generator. You can specify this on the command line with
   the -n option. */
#define DBCC_GENERATOR_VERSION (3)

#include <stdint.h>
#include <stdio.h>

#ifdef __cplusplus
extern "C" { 
#endif

#ifndef PREPACK
#define PREPACK
#endif

#ifndef POSTPACK
#define POSTPACK
#endif

#ifndef DBCC_TIME_STAMP
#define DBCC_TIME_STAMP
typedef uint32_t dbcc_time_stamp_t; /* Time stamp for message; you decide on units */
#endif

#ifndef DBCC_STATUS_ENUM
#define DBCC_STATUS_ENUM
typedef enum {
	DBCC_SIG_STAT_UNINITIALIZED_E = 0, /* Message never sent/received */
	DBCC_SIG_STAT_OK_E            = 1, /* Message ok */
	DBCC_SIG_STAT_ERROR_E         = 2, /* Encode/Decode/Timestamp/Any error */
} dbcc_signal_status_e;
#endif

#define CAN_ID_DV_DRIVING_DYNAMICS_1 (500) /* 0x1f4 */
#define CAN_ID_DV_DRIVING_DYNAMICS_2 (501) /* 0x1f5 */
#define CAN_ID_DV_SYSTEM_STATUS (502) /* 0x1f6 */

typedef PREPACK struct {
	uint8_t Speed_actual; /* scaling 1.0, offset 0.0, units km/h  */
	uint8_t Speed_target; /* scaling 1.0, offset 0.0, units km/h  */
	int8_t Steering_angle_actual; /* scaling 0.5, offset 0.0, units °  */
	int8_t Steering_angle_target; /* scaling 0.5, offset 0.0, units °  */
	uint8_t Brake_hydr_actual; /* scaling 1.0, offset 0.0, units %  */
	uint8_t Brake_hydr_target; /* scaling 1.0, offset 0.0, units %  */
	int8_t Motor_moment_actual; /* scaling 1.0, offset 0.0, units %  */
	int8_t Motor_moment_target; /* scaling 1.0, offset 0.0, units %  */
} POSTPACK can_0x1f4_DV_driving_dynamics_1_t;

typedef PREPACK struct {
	int16_t Acceleration_longitudinal; /* scaling 0.0, offset 0.0, units m/s²  */
	int16_t Acceleration_lateral; /* scaling 0.0, offset 0.0, units m/s²  */
	int16_t Yaw_rate; /* scaling 0.0, offset 0.0, units °/s  */
} POSTPACK can_0x1f5_DV_driving_dynamics_2_t;

typedef PREPACK struct {
	uint16_t Cones_count_all; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Cones_count_actual; /* scaling 1.0, offset 0.0, units none  */
	uint8_t Lap_counter; /* scaling 1.0, offset 0.0, units none  */
	/* AS_state: AS state off=1, ready=2, driving=3, emergency brake=4, finish=5. */
	/* scaling 1.0, offset 0.0, units none  */
	uint8_t AS_state;
	/* AMI_state: AMI state acceleration=1, skidpad=2, trackdrive=3, braketest=4, inspection=5, autocross=6. */
	/* scaling 1.0, offset 0.0, units none  */
	uint8_t AMI_state;
	/* EBS_state: EBS state unavailable=1, armed=2, activated=3. */
	/* scaling 1.0, offset 0.0, units none  */
	uint8_t EBS_state;
	/* Service_brake_state: Disengaged=1, Engaged=2, Available=3. */
	/* scaling 1.0, offset 0.0, units none  */
	uint8_t Service_brake_state;
	uint8_t Steering_state; /* scaling 1.0, offset 0.0, units bool  */
} POSTPACK can_0x1f6_DV_system_status_t;

typedef PREPACK struct {
	dbcc_time_stamp_t can_0x1f4_DV_driving_dynamics_1_time_stamp_rx;
	dbcc_time_stamp_t can_0x1f5_DV_driving_dynamics_2_time_stamp_rx;
	dbcc_time_stamp_t can_0x1f6_DV_system_status_time_stamp_rx;
	unsigned can_0x1f4_DV_driving_dynamics_1_status : 2;
	unsigned can_0x1f4_DV_driving_dynamics_1_tx : 1;
	unsigned can_0x1f4_DV_driving_dynamics_1_rx : 1;
	unsigned can_0x1f5_DV_driving_dynamics_2_status : 2;
	unsigned can_0x1f5_DV_driving_dynamics_2_tx : 1;
	unsigned can_0x1f5_DV_driving_dynamics_2_rx : 1;
	unsigned can_0x1f6_DV_system_status_status : 2;
	unsigned can_0x1f6_DV_system_status_tx : 1;
	unsigned can_0x1f6_DV_system_status_rx : 1;
	can_0x1f4_DV_driving_dynamics_1_t can_0x1f4_DV_driving_dynamics_1;
	can_0x1f5_DV_driving_dynamics_2_t can_0x1f5_DV_driving_dynamics_2;
	can_0x1f6_DV_system_status_t can_0x1f6_DV_system_status;
} POSTPACK can_obj_can3_h_t;

int unpack_message_can3(can_obj_can3_h_t *o, const unsigned long id, uint64_t data, uint8_t dlc, dbcc_time_stamp_t time_stamp);
int pack_message_can3(can_obj_can3_h_t *o, const unsigned long id, uint64_t *data);
int print_message_can3(const can_obj_can3_h_t *o, const unsigned long id, FILE *output);

int decode_can_0x1f4_Speed_actual(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f4_Speed_actual(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f4_Speed_target(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f4_Speed_target(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f4_Steering_angle_actual(const can_obj_can3_h_t *o, double *out);
int encode_can_0x1f4_Steering_angle_actual(can_obj_can3_h_t *o, double in);
int decode_can_0x1f4_Steering_angle_target(const can_obj_can3_h_t *o, double *out);
int encode_can_0x1f4_Steering_angle_target(can_obj_can3_h_t *o, double in);
int decode_can_0x1f4_Brake_hydr_actual(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f4_Brake_hydr_actual(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f4_Brake_hydr_target(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f4_Brake_hydr_target(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f4_Motor_moment_actual(const can_obj_can3_h_t *o, int8_t *out);
int encode_can_0x1f4_Motor_moment_actual(can_obj_can3_h_t *o, int8_t in);
int decode_can_0x1f4_Motor_moment_target(const can_obj_can3_h_t *o, int8_t *out);
int encode_can_0x1f4_Motor_moment_target(can_obj_can3_h_t *o, int8_t in);


int decode_can_0x1f5_Acceleration_longitudinal(const can_obj_can3_h_t *o, double *out);
int encode_can_0x1f5_Acceleration_longitudinal(can_obj_can3_h_t *o, double in);
int decode_can_0x1f5_Acceleration_lateral(const can_obj_can3_h_t *o, double *out);
int encode_can_0x1f5_Acceleration_lateral(can_obj_can3_h_t *o, double in);
int decode_can_0x1f5_Yaw_rate(const can_obj_can3_h_t *o, double *out);
int encode_can_0x1f5_Yaw_rate(can_obj_can3_h_t *o, double in);


int decode_can_0x1f6_Cones_count_all(const can_obj_can3_h_t *o, uint16_t *out);
int encode_can_0x1f6_Cones_count_all(can_obj_can3_h_t *o, uint16_t in);
int decode_can_0x1f6_Cones_count_actual(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f6_Cones_count_actual(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f6_Lap_counter(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f6_Lap_counter(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f6_AS_state(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f6_AS_state(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f6_AMI_state(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f6_AMI_state(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f6_EBS_state(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f6_EBS_state(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f6_Service_brake_state(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f6_Service_brake_state(can_obj_can3_h_t *o, uint8_t in);
int decode_can_0x1f6_Steering_state(const can_obj_can3_h_t *o, uint8_t *out);
int encode_can_0x1f6_Steering_state(can_obj_can3_h_t *o, uint8_t in);


#ifdef __cplusplus
} 
#endif

#endif
